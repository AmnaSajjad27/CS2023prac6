push static 0
push constant 0
eq
if-goto RETURN_0

push static 1
push constant 0
eq
if-goto RETURN_0

push constant 0
push static 0
lt
if-goto RETURN_NO1

push temp 0             
push constant 1
add
pop temp 0
push static 0           
not
push constant 1
add
pop temp 1              
label POSITIVE_X

// y neg?
push constant 0
push static 1
lt
if-goto RETURN_NO2

push temp 0             
push constant 1
add
pop temp 0     
//negate arg y
push static 1           
not
push constant 1
add
pop temp 2              

label POSITIVE_Y
push temp 1
push temp 2
lt                          
if-goto X_SMALLER            
// if y smaller
push temp 2
pop temp 3
push temp 1
pop temp 4

label START_CALC
push constant 0
// counter index
pop temp 5              
push constant 0
// running sum
pop temp 6              

label START_LOOP
push temp 5
push temp 3
eq
if-goto ENDLOOP
push temp 4             
push temp 6 
add
pop temp 6

// iteriate the loop and go again in confition satisfied
push temp 5             
push constant 1
add
pop temp 5

goto START_LOOP

label ENDLOOP
push constant 1
push temp 0
eq
if-goto ONE_NEG

push temp 6
pop local 0
push constant 0
pop temp 0             

label END
goto END


label X_SMALLER
push temp 1
pop temp 3
push temp 2
pop temp 4
goto START_CALC

label ONE_NEG
push temp 6
neg

pop local 0

push constant 0
pop temp 0              
goto END


label RETURN_NO1
push static 0           
pop temp 1
goto POSITIVE_X

label RETURN_NO2
push static 1           
pop temp 2
goto POSITIVE_Y

label RETURN_0
push constant 0
pop local 0
goto END